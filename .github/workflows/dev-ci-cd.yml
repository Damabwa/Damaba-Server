name: CI/CD for dev

on:
  push:
    branches: [ "develop" ]

env:
  ENV_FILE_NAME: env.properties
  ENV_DIR: ./src/main/resources
  DOCKER_FILE: Dockerfile-dev
  DOCKER_IMAGE_PLATFORM: linux/amd64

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set environments
        run: echo "${{secrets.DEV_ENV}}" > $ENV_DIR/$ENV_FILE_NAME

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-dev
          push: true
          tags: ${{ secrets.DEV_DOCKER_REPO }}:latest

      - name: Executing remote ssh commands with docker compose for Continuous Delivery
        if: ${{ !failure() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/damaba
            sudo docker compose down
            sudo docker pull ${{ secrets.DOCKER_REPO_DEV }}
            sudo docker compose up -d
            sudo docker image prune -f
